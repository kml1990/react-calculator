{"version":3,"sources":["Components/Display.js","Components/Button.js","Components/Controls.js","App.js","serviceWorker.js","index.js"],"names":["Display","react_default","a","createElement","className","this","props","calculation","sum","Component","Button","styles","color","onClick","data-value","value","name","Controls","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","target","getAttribute","setState","triggerCalculation","state","triggerSum","isNaN","length","join","posNeg","toConsumableArray","percentage","removeLast","splice","concat","Components_Button","App","calculate","String","math","eval","Components_Display","Components_Controls","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46b22b4b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Display extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"display\">\r\n        <div className=\"display__current\">\r\n          {this.props.calculation}\r\n        </div>\r\n        <div className=\"display__result\">{this.props.sum}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const styles = \"controls__item \" + this.props.color;\r\n    return (\r\n      <a\r\n        onClick={this.props.onClick}\r\n        className={styles}\r\n        data-value={this.props.value}\r\n      >\r\n        {this.props.name}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from './Button'\r\n\r\nclass Controls extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      calculation: []\r\n    }\r\n  }\r\n  \r\n  handleClick = e => {\r\n    const value = e.target.getAttribute(\"data-value\");\r\n    \r\n    switch(value)\r\n    {\r\n      case 'clear' :\r\n        \r\n        this.setState({ calculation: [] }, () => {\r\n          this.props.triggerCalculation(this.state.calculation);\r\n          this.props.triggerSum(this.state.calculation);\r\n        });\r\n        \r\n        break;\r\n      case '=' :\r\n\r\n        if(isNaN(this.state.calculation[this.state.calculation.length - 1])) {\r\n          break;\r\n        }\r\n\r\n        this.props.triggerSum(this.state.calculation.join(''));\r\n        this.setState({ \r\n          calculation: [] \r\n        }, () => {\r\n          this.props.triggerCalculation(this.state.calculation.join(''));\r\n        });\r\n\r\n        break;\r\n      case 'posNeg' :\r\n\r\n        let posNeg = [[...this.state.calculation].join('') * -1];\r\n        this.setState({ \r\n          calculation: posNeg\r\n        }, () => {\r\n          this.props.triggerCalculation(this.state.calculation.join(''));\r\n        });\r\n\r\n        break;\r\n      case 'perc' :\r\n\r\n        let percentage = [[...this.state.calculation].join('') * 0.01];\r\n        \r\n        this.setState({ \r\n          calculation: percentage\r\n        }, () => {\r\n          this.props.triggerCalculation(this.state.calculation.join(''));\r\n        });\r\n\r\n        break;\r\n      case 'back' :\r\n\r\n        let removeLast = [...this.state.calculation];\r\n        removeLast.splice(removeLast.length - 1, 1);\r\n\r\n        this.setState({\r\n          calculation: removeLast\r\n        }, () => {\r\n          this.props.triggerCalculation(this.state.calculation.join(''));\r\n        });\r\n        break;\r\n\r\n      default :\r\n      \r\n        if(isNaN(value) && isNaN(this.state.calculation[this.state.calculation.length - 1])) {\r\n          break;\r\n        }\r\n\r\n        this.setState({ calculation: [...this.state.calculation, value] }, () => {\r\n          this.props.triggerCalculation(this.state.calculation.join(''));\r\n        });\r\n        \r\n        break;\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"controls\">\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"C\"\r\n          value=\"clear\"\r\n          color=\"controls__item--darker\"\r\n        />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"+/-\"\r\n          value=\"posNeg\"\r\n          color=\"controls__item--darker\"\r\n        />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"%\"\r\n          value=\"perc\"\r\n          color=\"controls__item--darker\"\r\n        />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"/\"\r\n          value=\"/\"\r\n          color=\"controls__item--orangeLight\"\r\n        />\r\n\r\n        <Button onClick={this.handleClick} name=\"7\" value=\"7\" />\r\n        <Button onClick={this.handleClick} name=\"8\" value=\"8\" />\r\n        <Button onClick={this.handleClick} name=\"9\" value=\"9\" />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"x\"\r\n          value=\"*\"\r\n          color=\"controls__item--orangeLight\"\r\n        />\r\n\r\n        <Button onClick={this.handleClick} name=\"4\" value=\"4\" />\r\n        <Button onClick={this.handleClick} name=\"5\" value=\"5\" />\r\n        <Button onClick={this.handleClick} name=\"6\" value=\"6\" />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"-\"\r\n          value=\"-\"\r\n          color=\"controls__item--orangeLight\"\r\n        />\r\n\r\n        <Button onClick={this.handleClick} name=\"3\" value=\"3\" />\r\n        <Button onClick={this.handleClick} name=\"2\" value=\"2\" />\r\n        <Button onClick={this.handleClick} name=\"1\" value=\"1\" />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"+\"\r\n          value=\"+\"\r\n          color=\"controls__item--orangeLight\"\r\n        />\r\n\r\n        <Button onClick={this.handleClick} name=\"0\" value=\"0\" />\r\n        <Button onClick={this.handleClick} name=\".\" value=\".\" />\r\n        <Button onClick={this.handleClick} name=\"&#8592;\" value=\"back\" />\r\n        <Button\r\n          onClick={this.handleClick}\r\n          name=\"=\"\r\n          value=\"=\"\r\n          color=\"controls__item--orangeMedium\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React, { Component } from 'react';\r\n\r\nimport Display from './Components/Display';\r\nimport Controls from './Components/Controls';\r\n\r\nimport math from 'mathjs';\r\n\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      calculation: [],\r\n      sum: 0\r\n    };\r\n  }\r\n  \r\n  calculate = (calculation) => {\r\n    this.setState({\r\n      calculation,\r\n    })\r\n  }\r\n  \r\n  sum = (calculation) => {\r\n\r\n    if(String(calculation).length === 0) {\r\n      calculation = 0;\r\n    } else {\r\n      calculation = math.eval(calculation);\r\n    }\r\n\r\n    this.setState({\r\n       sum: calculation\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"calculator\">\r\n          <Display calculation={this.state.calculation} sum={this.state.sum} />\r\n          <Controls triggerSum={this.sum} triggerCalculation={this.calculate}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}